/*
My API

This is the API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package main

import (
	"encoding/json"
	"fmt"
)

// checks if the SharedFileSystemConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SharedFileSystemConfig{}

// SharedFileSystemConfig struct for SharedFileSystemConfig
type SharedFileSystemConfig struct {
	Type string `json:"type"`
	RootUrl string `json:"rootUrl"`
	Region *string `json:"region,omitempty"`
	Endpoint *string `json:"endpoint,omitempty"`
	AccessKey *string `json:"accessKey,omitempty"`
	SecretKey *string `json:"secretKey,omitempty"`
}

type _SharedFileSystemConfig SharedFileSystemConfig

// NewSharedFileSystemConfig instantiates a new SharedFileSystemConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSharedFileSystemConfig(type_ string, rootUrl string) *SharedFileSystemConfig {
	this := SharedFileSystemConfig{}
	this.Type = type_
	this.RootUrl = rootUrl
	return &this
}

// NewSharedFileSystemConfigWithDefaults instantiates a new SharedFileSystemConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSharedFileSystemConfigWithDefaults() *SharedFileSystemConfig {
	this := SharedFileSystemConfig{}
	return &this
}

// GetType returns the Type field value
func (o *SharedFileSystemConfig) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SharedFileSystemConfig) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *SharedFileSystemConfig) SetType(v string) {
	o.Type = v
}

// GetRootUrl returns the RootUrl field value
func (o *SharedFileSystemConfig) GetRootUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RootUrl
}

// GetRootUrlOk returns a tuple with the RootUrl field value
// and a boolean to check if the value has been set.
func (o *SharedFileSystemConfig) GetRootUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RootUrl, true
}

// SetRootUrl sets field value
func (o *SharedFileSystemConfig) SetRootUrl(v string) {
	o.RootUrl = v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *SharedFileSystemConfig) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharedFileSystemConfig) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *SharedFileSystemConfig) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *SharedFileSystemConfig) SetRegion(v string) {
	o.Region = &v
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise.
func (o *SharedFileSystemConfig) GetEndpoint() string {
	if o == nil || IsNil(o.Endpoint) {
		var ret string
		return ret
	}
	return *o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharedFileSystemConfig) GetEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.Endpoint) {
		return nil, false
	}
	return o.Endpoint, true
}

// HasEndpoint returns a boolean if a field has been set.
func (o *SharedFileSystemConfig) HasEndpoint() bool {
	if o != nil && !IsNil(o.Endpoint) {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given string and assigns it to the Endpoint field.
func (o *SharedFileSystemConfig) SetEndpoint(v string) {
	o.Endpoint = &v
}

// GetAccessKey returns the AccessKey field value if set, zero value otherwise.
func (o *SharedFileSystemConfig) GetAccessKey() string {
	if o == nil || IsNil(o.AccessKey) {
		var ret string
		return ret
	}
	return *o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharedFileSystemConfig) GetAccessKeyOk() (*string, bool) {
	if o == nil || IsNil(o.AccessKey) {
		return nil, false
	}
	return o.AccessKey, true
}

// HasAccessKey returns a boolean if a field has been set.
func (o *SharedFileSystemConfig) HasAccessKey() bool {
	if o != nil && !IsNil(o.AccessKey) {
		return true
	}

	return false
}

// SetAccessKey gets a reference to the given string and assigns it to the AccessKey field.
func (o *SharedFileSystemConfig) SetAccessKey(v string) {
	o.AccessKey = &v
}

// GetSecretKey returns the SecretKey field value if set, zero value otherwise.
func (o *SharedFileSystemConfig) GetSecretKey() string {
	if o == nil || IsNil(o.SecretKey) {
		var ret string
		return ret
	}
	return *o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharedFileSystemConfig) GetSecretKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SecretKey) {
		return nil, false
	}
	return o.SecretKey, true
}

// HasSecretKey returns a boolean if a field has been set.
func (o *SharedFileSystemConfig) HasSecretKey() bool {
	if o != nil && !IsNil(o.SecretKey) {
		return true
	}

	return false
}

// SetSecretKey gets a reference to the given string and assigns it to the SecretKey field.
func (o *SharedFileSystemConfig) SetSecretKey(v string) {
	o.SecretKey = &v
}

func (o SharedFileSystemConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SharedFileSystemConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["rootUrl"] = o.RootUrl
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.Endpoint) {
		toSerialize["endpoint"] = o.Endpoint
	}
	if !IsNil(o.AccessKey) {
		toSerialize["accessKey"] = o.AccessKey
	}
	if !IsNil(o.SecretKey) {
		toSerialize["secretKey"] = o.SecretKey
	}
	return toSerialize, nil
}

func (o *SharedFileSystemConfig) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"rootUrl",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSharedFileSystemConfig := _SharedFileSystemConfig{}

	err = json.Unmarshal(bytes, &varSharedFileSystemConfig)

	if err != nil {
		return err
	}

	*o = SharedFileSystemConfig(varSharedFileSystemConfig)

	return err
}

type NullableSharedFileSystemConfig struct {
	value *SharedFileSystemConfig
	isSet bool
}

func (v NullableSharedFileSystemConfig) Get() *SharedFileSystemConfig {
	return v.value
}

func (v *NullableSharedFileSystemConfig) Set(val *SharedFileSystemConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableSharedFileSystemConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableSharedFileSystemConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSharedFileSystemConfig(val *SharedFileSystemConfig) *NullableSharedFileSystemConfig {
	return &NullableSharedFileSystemConfig{value: val, isSet: true}
}

func (v NullableSharedFileSystemConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSharedFileSystemConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


